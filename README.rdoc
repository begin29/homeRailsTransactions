== README

{<img src="https://badges.gitter.im/Join%20Chat.svg" alt="Join the chat at https://gitter.im/begin29/homeRailsTransactions">}[https://gitter.im/begin29/homeRailsTransactions?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge]

#Requirements
  * sudo apt-get install nodejs

#View
  - обробка користувацьких подій
  - створення re-usable компонентів
  - combining templates with data to render as sections of a page's DOM

  Клік -> видалення елемента -> Router

    Touch events:
      touchStart
      touchMove
      touchEnd
      touchCancel
      Keyboard events

      keyDown
      keyUp
      keyPress
      Mouse events

      mouseDown
      mouseUp
      contextMenu
      click
      doubleClick
      mouseMove
      focusIn
      focusOut
      mouseEnter
      mouseLeave
      Form events:

      submit
      change
      focusIn
      focusOut
      input
      HTML5 drag and drop events:

      dragStart
      drag
      dragEnter
      dragLeave
      dragOver
      dragEnd
      drop

#Controller - proxy for model properties controller gets the model it represents from its route handler.
   Controllers will have properties that your app does not need to save to the server.
  - information only for the lifetime of this application run, you should store it on a controller
  - all of template properties come from controller, and it doesn't need to know about the model directly.

  Template ------>(get properties from) Controller ------->(decorates a) Model
  actions: - actions for buttons

##ObjectController. To represent a single model.

##Ember.ArrayController. To represent an array of models.

#Router
  When the current URL changes, the newly active route handlers may do one or more of the following:
    Conditionally redirect to a new URL.
    Update a controller so that it represents a particular model.
    Change the template on screen, or place a new template into an existing outlet.

  One of the responsibilities of a resource's route handler is to convert a URL into a model.

  App.PostsRoute = Ember.Route.extend({
    model: function() {
      return this.store.find('post');
    }
  });